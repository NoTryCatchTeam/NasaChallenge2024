@page "/"
@using NasaChallenge2024.Definitions.Models
@inject IJSRuntime JsRuntime
@inject HttpClient Http

<PageTitle>INDEX</PageTitle>

<img class="logo" src="images/exoplan.svg" alt="logo"/>

<div class="avatar">
    <img src="images/avatar.svg" alt="avatar"/>
    <div class="score">654</div>
</div>


<div class="menu">
    <button class="menu-item" autofocus><img class="starFour" src="images/starFour.svg" alt="starFour"/>Main</button>    
    <button class="menu-item"><img class="planet" src="images/planet.svg" alt="planet"/>Planets</button>
    <button class="menu-item"><img class="flyingSaucer" src="images/flyingSaucer.svg" alt="flyingSaucer"/>Observatories</button>
</div>


<button class="vr-button"><div class="vr"><img class="visor" src="images/visor.svg" alt="visor"/>VR Mode</div></button>

<div class="bottom-panels">
    <div class="bottom-panels-item"></div>
    <div class="bottom-panels-item"></div>
    <div class="bottom-panels-item"></div>
</div>


@code
{
    private IJSObjectReference _mainJsModule;
    
    //var exoplanets = await Http.GetFromJsonAsync<Exoplanet[]>("jsons/exoplanets.json");
    //var observatories = await Http.GetFromJsonAsync<Observatory[]>("jsons/observatories.json");
    //var starts = await Http.GetFromJsonAsync<Star[]>("jsons/stars.json");
    //var telescopes = await Http.GetFromJsonAsync<Telescope[]>("jsons/telescopes.json");
    //var travelTypes = await Http.GetFromJsonAsync<TravelType[]>("jsons/travel-types.json");

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            return;
        }

        _mainJsModule = await JsRuntime.InvokeAsync<IJSObjectReference>("import", "./js/main.js");
        await _mainJsModule.InvokeVoidAsync("hello");
    }
}