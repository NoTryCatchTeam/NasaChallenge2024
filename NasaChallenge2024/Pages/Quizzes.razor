@page "/quizzes"
@inject IJSRuntime JsRuntime

<PageTitle>Quizzes</PageTitle>

<div class="cards-page-container animate__animated animate__fadeInDown">
    <label class="title">QUIZZES</label>
    <label class="sub-title">HI! ðŸ‘‹ HERE YOU CAN PRACTICE YOUR KNOWLEDGE. CHOOSE A QUIZ, ANSWER QUESTIONS AND IMPROVE
        YOUR KNOWLEDGE</label>

    <div class="cards-container" style="margin-top: 40px;">
        @foreach (var quiz in _quizzes)
        {
            <div class="item-card">
                <div class="preview-image-container"></div>
                <div class="card-content-container">
                    <span class="title">@quiz.Name.ToUpper()</span>
                    <div class="sub-title-container">
                        <span>@quiz.QuestionsCount Questions</span>
                        <div class="time-indicator"></div>
                        <span>@quiz.Time.TotalMinutes minutes</span>
                    </div>
                </div>
            </div>
        }
    </div>
</div>


@code {
    private class Quiz
    {
        public string Name { get; set; }

        public int QuestionsCount { get; set; }

        public TimeSpan Time { get; set; }
    }

    private Quiz[] _quizzes = new[]
    {
new Quiz
{
Name = "Who are you from the exoplanets?",
QuestionsCount = 10,
Time = TimeSpan.FromMinutes(5),
},
new Quiz
{
Name = "La Silla observatory",
QuestionsCount = 15,
Time = TimeSpan.FromMinutes(8),
},
new Quiz
{
Name = "La Silla observatory",
QuestionsCount = 4,
Time = TimeSpan.FromMinutes(5),
},
new Quiz
{
Name = "La Silla observatory",
QuestionsCount = 15,
Time = TimeSpan.FromMinutes(15),
},
new Quiz
{
Name = "La Silla observatory",
QuestionsCount = 10,
Time = TimeSpan.FromMinutes(9),
},
};

    private IJSObjectReference _mainJsModule;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            return;
        }

        _mainJsModule = await JsRuntime.InvokeAsync<IJSObjectReference>("import", "./js/scene.js");

        if (!await _mainJsModule.InvokeAsync<bool>("initFreeCameraScene", "#scene-canvas"))
        {
            await _mainJsModule.InvokeVoidAsync("showFreeCameraStateAsync");
        }
    }
}