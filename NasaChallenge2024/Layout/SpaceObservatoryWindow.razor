@using NasaChallenge2024.Definitions.Models

@if (_observatory != null)
{
    <div class="floating-window-container animate__animated animate__fadeInRight">
        <button class="floating-window-close" @onclick="OnCloseClickAction">
            <img src="images/ic_cross.svg"/>
        </button>
        <div class="floating-window-container-content">
            <label class="floating-window-header-title">@_observatory.Name</label>
            <div class="floating-window-content">
                <div class="object-panel-item">
                    <label class="object-panel-item-key">Mission Type</label>
                    <label class="object-panel-item-value">@_observatory.MissionType</label>
                </div>
                <hr>
                <div class="object-panel-item">
                    <label class="object-panel-item-key">Launch Date</label>
                    <label class="object-panel-item-value">@_observatory.LaunchDate</label>
                </div>
                <hr>
                <div class="object-panel-item">
                    <label class="object-panel-item-key">Objective</label>
                    <label class="object-panel-item-value">@_observatory.Objective</label>
                </div>
                <hr>
                <div class="object-panel-item">
                    <label class="object-panel-item-key">Wave Light</label>
                    <label class="object-panel-item-value">@_observatory.WaveLight</label>
                </div>
                <hr>
                <div class="object-panel-item">
                    <label class="object-panel-item-key">Type</label>
                    <label class="object-panel-item-value">@_observatory.Type</label>
                </div>
                <hr>
                <label>@_observatory.Description</label>
            </div>
        </div>
    </div>
}

@code{
    private Observatory _observatory;

    [Parameter]
    public EventCallback OnWindowCloseClicked { get; set; }

    public void SelectObservatory(Observatory observatory)
    {
        _observatory = observatory;
        StateHasChanged();
    }

    private Task OnCloseClickAction() => OnWindowCloseClicked.InvokeAsync(null);
}