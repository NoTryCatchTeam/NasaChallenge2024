import*as e from"./_snowpack/pkg/three.js";export class SolarSystem extends e.Group{constructor(){super()}static getEarthRadiusScene(){return 1}static getSunRadiusScene(){return 149*this.getEarthRadiusScene()}static getEarthOrbitDistanceScene(){return 100+this.getSunRadiusScene()}async initAsync(){const a=SolarSystem.getSunRadiusScene(),r=SolarSystem.getEarthRadiusScene(),c=SolarSystem.getEarthOrbitDistanceScene();{const i=new e.SphereGeometry(a,32,32),n=await new e.TextureLoader().loadAsync("images/image_texture_sun.jpg");n.colorSpace=e.SRGBColorSpace;const o=new e.MeshPhongMaterial({emissiveMap:n,emissive:"#ffffff"});let t=new e.Mesh(i,o);this.add(t),this.Sun=t;const s=new e.AxesHelper(a);s.material.depthTest=!1,s.renderOrder=1,t.add(s);const h=new e.PointLight("#ffffff",1e3);h.position.set(c-r*20,0,0),this.add(h)}{const i=new e.SphereGeometry(r,32,32),n=await new e.TextureLoader().loadAsync("images/image_texture_earth_daymap.jpg");n.colorSpace=e.SRGBColorSpace;const o=new e.MeshPhongMaterial({map:n});let t=new e.Mesh(i,o);t.position.set(c,0,0),this.add(t),this.Earth=t;const s=new e.AxesHelper(r);s.material.depthTest=!1,s.renderOrder=1,t.add(s)}}animate(a){a*=.001,this.Earth.setRotationFromAxisAngle(new e.Vector3(0,1,0),a*.1),this.Sun.setRotationFromAxisAngle(new e.Vector3(0,1,0),a*.01)}}
