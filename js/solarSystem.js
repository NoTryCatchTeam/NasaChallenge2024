import*as e from"./_snowpack/pkg/three.js";import*as h from"./helpers.js";export class BaseSystem extends e.Group{constructor(){super()}}export class SolarSystem extends BaseSystem{constructor(){super()}static getEarthRadius(){return 1}static getSunRadius(){return 149*this.getEarthRadius()}static getEarthOrbitalRadius(){return 1e3+this.getSunRadius()+this.getEarthRadius()}getStarRadius(){return this.Star.geometry.parameters.radius}getPlanetRadius(){return this.Planet.geometry.parameters.radius}async initAsync(){const s=SolarSystem.getSunRadius(),n=SolarSystem.getEarthRadius(),o=SolarSystem.getEarthOrbitalRadius();{const r=new e.SphereGeometry(s,32,32),a=await new e.TextureLoader().loadAsync("images/image_texture_sun.jpg");a.colorSpace=e.SRGBColorSpace;const i=new e.MeshPhongMaterial({emissiveMap:a,emissive:"#ffffff"});let t=new e.Mesh(r,i);this.add(t),this.Star=t,globalThis.isDebug&&h.addAxesHelper(t,s),this.light=new e.PointLight("#ffffff",o,0,.8),this.add(this.light)}{const r=new e.SphereGeometry(n,32,32),a=await new e.TextureLoader().loadAsync("images/image_texture_earth_daymap.jpg");a.colorSpace=e.SRGBColorSpace;const i=new e.MeshPhongMaterial({map:a});let t=new e.Mesh(r,i);t.position.set(o,0,0),this.add(t),this.Planet=t,globalThis.isDebug&&h.addAxesHelper(t,n)}}animate(s){s*=.001,this.Planet.setRotationFromAxisAngle(new e.Vector3(0,1,0),s*.1),this.Star.setRotationFromAxisAngle(new e.Vector3(0,1,0),s*.01)}show(){this.light.decay=.8}hide(){this.light.decay=100}}
