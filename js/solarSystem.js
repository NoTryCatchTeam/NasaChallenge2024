import*as e from"./_snowpack/pkg/three.js";export class SolarSystem extends e.Group{constructor(){super()}static getEarthRadius(){return 1}static getSunRadius(){return 149*this.getEarthRadius()}static getEarthOrbitalRadius(){return 1e3+this.getSunRadius()+this.getEarthRadius()}async initAsync(){const s=SolarSystem.getSunRadius(),o=SolarSystem.getEarthRadius(),h=SolarSystem.getEarthOrbitalRadius();{const i=new e.SphereGeometry(s,32,32),r=await new e.TextureLoader().loadAsync("images/image_texture_sun.jpg");r.colorSpace=e.SRGBColorSpace;const n=new e.MeshPhongMaterial({emissiveMap:r,emissive:"#ffffff"});let t=new e.Mesh(i,n);this.add(t),this.Sun=t;const a=new e.AxesHelper(s);a.material.depthTest=!1,a.renderOrder=1,t.add(a);const d=new e.PointLight("#ffffff",h,0,.8);this.add(d)}{const i=new e.SphereGeometry(o,32,32),r=await new e.TextureLoader().loadAsync("images/image_texture_earth_daymap.jpg");r.colorSpace=e.SRGBColorSpace;const n=new e.MeshPhongMaterial({map:r});let t=new e.Mesh(i,n);t.position.set(h,0,0),this.add(t),this.Earth=t;const a=new e.AxesHelper(o);a.material.depthTest=!1,a.renderOrder=1,t.add(a)}}animate(s){s*=.001,this.Earth.setRotationFromAxisAngle(new e.Vector3(0,1,0),s*.1),this.Sun.setRotationFromAxisAngle(new e.Vector3(0,1,0),s*.01)}}
