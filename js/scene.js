import*as r from"./_snowpack/pkg/three.js";import*as S from"./_snowpack/pkg/three/addons.js";import{SolarSystem as P}from"./solarSystem.js";import{ExoplanetSystem as C}from"./exoplanetSystem.js";const w=-160;let x=!1,m,a,i,u,c,h,g,p={x:.5,y:.5};export async function initScene(n,o=null,l=!1){if(x)return;globalThis.isDebug=l,x=!0;const s=document.querySelector(n),d=new r.WebGLRenderer({antialias:!0,canvas:s,alpha:!0});d.setPixelRatio(window.devicePixelRatio);{m=new r.Scene;const t=await new r.TextureLoader().loadAsync("images/image_background_stars.jpg");t.mapping=r.EquirectangularReflectionMapping,t.colorSpace=r.SRGBColorSpace,m.background=t}{const t=new r.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,2e3);m.add(t);const f=new S.OrbitControls(t,s);f.target.set(0,0,0),f.dampingFactor=.2,f.enableDamping=!0,a=new R(t,f)}{const t=new r.AmbientLight("#ffffff",.1);m.add(t)}const e=new b;u=new P,await u.initAsync(),e.positionGroup(u),m.add(u),c=new C,await c.initAsync(),e.positionGroup(c),m.add(c),o!=null?await showExoplanetSystemAsync(o,!1):showSolarSystemAsync(!1),window.addEventListener("mousemove",M,!1),setIsFocusOnScene(!1),z(d)}export async function showExoplanetSystemAsync(n,o){u.hide(),c.show(),await c.prepareAsync(n),i=c,y(o)}export function showSolarSystemAsync(n){c.hide(),u.show(),i=u,y(n)}export function setIsFocusOnScene(n){h=n,a.Controls.enabled=h,y(!1)}function z(n){requestAnimationFrame(o);function o(s){const d=s*.001;if(l()){const e=n.domElement;a.Camera.aspect=e.clientWidth/e.clientHeight,a.Camera.updateProjectionMatrix()}if(u.animate(s),c.animate(s),!h){const e=a.Controls.target,t=new r.Vector3(e.x+(.5-p.x)/100,e.y+(.5-p.y)/100,e.z+(.5-p.x)/100);Math.abs(g.x-t.x)<=i.getPlanetRadius()/10&&(e.x=t.x),Math.abs(g.y-t.y)<=i.getPlanetRadius()/10&&(e.y=t.y),Math.abs(g.z-t.z)<=i.getPlanetRadius()/10&&(e.z=t.z),a.Controls.target.copy(e)}a.Controls.update(),n.render(m,a.Camera),requestAnimationFrame(o)}function l(){const s=n.domElement,d=s.clientWidth,e=s.clientHeight,t=s.width!==d||s.height!==e;return t&&n.setSize(d,e,!1),t}}function y(n){const o=(n?i.Star:i.Planet).getWorldPosition(new r.Vector3),l=n?i.getStarRadius():i.getPlanetRadius();let s=2*l*Math.sin(w*Math.PI/180),d=2*l*Math.cos(w*Math.PI/180),e={x:0,z:0};if(!h){const t=90-(180-Math.abs(w));e.x=i.getPlanetRadius()*Math.sin(t*Math.PI/180),e.z=i.getPlanetRadius()*Math.cos(t*Math.PI/180)}a.Camera.position.set(o.x+s-e.x,o.y,o.z+d+e.z),a.Controls.target.set(o.x-e.x,o.y,o.z+e.z),g=a.Controls.target.clone()}function M(n){p.x=n.clientX/window.innerWidth,p.y=n.clientY/window.innerHeight}class R{constructor(o,l){this.Camera=o,this.Controls=l}}class b{constructor(){this.sceneGroupXPosition=0,this.sceneGroupXPositionIncrementor=1e4}positionGroup(o){o.position.set(this.sceneGroupXPosition++*this.sceneGroupXPositionIncrementor,0,0)}}
