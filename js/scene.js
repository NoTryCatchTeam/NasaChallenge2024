import*as i from"./_snowpack/pkg/three.js";import*as y from"./_snowpack/pkg/three/addons.js";import{SolarSystem as S}from"./solarSystem.js";import{ExoplanetSystem as x}from"./exoplanetSystem.js";import{SceneCamera as P}from"./sceneCamera.js";const h=-160;let w=!1,d,n,g={x:.5,y:.5},c,m,u;export async function initScene(a,o=null,r=!1){if(w)return!1;globalThis.isDebug=r,w=!0;const s=document.querySelector(a),l=new i.WebGLRenderer({antialias:!0,canvas:s,alpha:!0});l.setPixelRatio(window.devicePixelRatio);{d=new i.Scene;const e=await new i.TextureLoader().loadAsync("images/image_background_stars.jpg");e.mapping=i.EquirectangularReflectionMapping,e.colorSpace=i.SRGBColorSpace,d.background=e}{const e=new i.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,2e3);d.add(e);const p=new y.OrbitControls(e,s);p.target.set(0,0,0),p.dampingFactor=.2,p.enableDamping=!0,n=new P(e,p)}{const e=new i.AmbientLight("#ffffff",.1);d.add(e)}const t=new I;return m=new S,await m.initAsync(),t.positionGroup(m),d.add(m),u=new x,await u.initAsync(),t.positionGroup(u),d.add(u),o!=null?await showHomeStateAsync(o):await showObservatoriesStateAsync(!0),window.addEventListener("mousemove",v,!1),M(l),!0}export async function showHomeStateAsync(a,o=!0){await C(a),n.resetControlsDistance(),n.IsDirectOnPlanet=!1,setIsFocusActivePlanetOnScene(!1,o)}export async function showObservatoriesStateAsync(a,o=!0){z();const r=c.getPlanetRadius();if(n.Controls.minDistance=r*1.5,n.Controls.maxDistance=r*2,a)n.IsDirectOnPlanet=!0,setIsFocusActivePlanetOnScene(!0,o);else{n.IsFocusOnScene=!1;const e=c.Planet.getWorldPosition(new i.Vector3);var s=new i.Vector3(e.x-r*2,e.y,e.z),l=(e.x-s.x)*Math.tan(45*Math.PI/180),t=new i.Vector3(e.x,e.y+l,e.z);n.changeCameraSettings(s,t,o)}}export function setIsFocusActivePlanetOnScene(a,o=!0){n.IsFocusOnScene=a;const r=A(n.IsDirectOnPlanet);n.changeCameraSettings(r.position,r.lookAt,o)}async function C(a){m.hide(),u.show(),await u.prepareAsync(a),c=u}function z(){u.hide(),m.show(),c=m}function M(a){requestAnimationFrame(o);function o(s){const l=s*.001;if(r()){const t=a.domElement;n.Camera.aspect=t.clientWidth/t.clientHeight,n.Camera.updateProjectionMatrix()}if(m.animate(s),u.animate(s),!n.CameraAnimator?.update(s)){if(!n.IsFocusOnScene){const t=n.Controls.target,e=new i.Vector3(t.x+(Math.abs(t.z-n.Camera.position.z)<1e7?0:(.5-g.x)/100),t.y+(.5-g.y)/100,t.z+(g.x-.5)/100);Math.abs(n.FocusedCameraTarget.x-e.x)<=c.getPlanetRadius()/10&&(t.x=e.x),Math.abs(n.FocusedCameraTarget.y-e.y)<=c.getPlanetRadius()/10&&(t.y=e.y),Math.abs(n.FocusedCameraTarget.z-e.z)<=c.getPlanetRadius()/10&&(t.z=e.z),n.Controls.target.copy(t)}n.Controls.update()}a.render(d,n.Camera),requestAnimationFrame(o)}function r(){const s=a.domElement,l=s.clientWidth,t=s.clientHeight,e=s.width!==l||s.height!==t;return e&&a.setSize(l,t,!1),e}}function A(a){const o=c.Planet.getWorldPosition(new i.Vector3),r=c.getPlanetRadius();let s=2*r*(a?-1:Math.sin(h*Math.PI/180)),l=a?0:2*r*Math.cos(h*Math.PI/180),t={x:0,z:0};if(!a&&!n.IsFocusOnScene){const f=90-(180-Math.abs(h));t.x=c.getPlanetRadius()*Math.sin(f*Math.PI/180),t.z=c.getPlanetRadius()*Math.cos(f*Math.PI/180)}var e=new i.Vector3(o.x+s-t.x,o.y,o.z+l+t.z),p=new i.Vector3(o.x-t.x,o.y,o.z+t.z);return{position:e,lookAt:p}}function v(a){g.x=a.clientX/window.innerWidth,g.y=a.clientY/window.innerHeight}class I{constructor(){this.sceneGroupXPosition=0,this.sceneGroupXPositionIncrementor=1e4}positionGroup(o){o.position.set(this.sceneGroupXPosition++*this.sceneGroupXPositionIncrementor,0,0)}}class F{}
