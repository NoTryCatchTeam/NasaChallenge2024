import*as c from"./_snowpack/pkg/three.js";import*as A from"./_snowpack/pkg/three/addons.js";import{SolarSystem as M}from"./solarSystem.js";import{ExoplanetSystem as v}from"./exoplanetSystem.js";import*as R from"./_snowpack/pkg/@tweenjs/tweenjs.js";const x=-160;let P=!1,p,a,h,y,g={x:.5,y:.5},f,r,u,l;export async function initScene(n,o=null,m=!1){if(P)return;globalThis.isDebug=m,P=!0;const s=document.querySelector(n),d=new c.WebGLRenderer({antialias:!0,canvas:s,alpha:!0});d.setPixelRatio(window.devicePixelRatio);{p=new c.Scene;const e=await new c.TextureLoader().loadAsync("images/image_background_stars.jpg");e.mapping=c.EquirectangularReflectionMapping,e.colorSpace=c.SRGBColorSpace,p.background=e}{const e=new c.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,2e3);p.add(e);const i=new A.OrbitControls(e,s);i.target.set(0,0,0),i.dampingFactor=.2,i.enableDamping=!0,a=new G(e,i)}{const e=new c.AmbientLight("#ffffff",.1);p.add(e)}const t=new T;u=new M,await u.initAsync(),t.positionGroup(u),p.add(u),l=new v,await l.initAsync(),t.positionGroup(l),p.add(l),o!=null?await showExoplanetSystemAsync(o,!1):showSolarSystemAsync(!1),window.addEventListener("mousemove",k,!1),setIsFocusOnScene(!1),b(d)}export async function showExoplanetSystemAsync(n,o){u.hide(),l.show(),await l.prepareAsync(n),r=l,C(o)}export function showSolarSystemAsync(n){l.hide(),u.show(),r=u,C(n)}export function setIsFocusOnScene(n){h=n,C(!1)}function b(n){requestAnimationFrame(o);function o(s){const d=s*.001;if(m()){const t=n.domElement;a.Camera.aspect=t.clientWidth/t.clientHeight,a.Camera.updateProjectionMatrix()}if(u.animate(s),l.animate(s),!f?.update(s)){if(!h){const t=a.Controls.target,e=new c.Vector3(t.x+(.5-g.x)/100,t.y+(.5-g.y)/100,t.z+(.5-g.x)/100);Math.abs(y.x-e.x)<=r.getPlanetRadius()/10&&(t.x=e.x),Math.abs(y.y-e.y)<=r.getPlanetRadius()/10&&(t.y=e.y),Math.abs(y.z-e.z)<=r.getPlanetRadius()/10&&(t.z=e.z),a.Controls.target.copy(t)}a.Controls.update()}n.render(p,a.Camera),requestAnimationFrame(o)}function m(){const s=n.domElement,d=s.clientWidth,t=s.clientHeight,e=s.width!==d||s.height!==t;return e&&n.setSize(d,t,!1),e}}function C(n){const o=(n?r.Star:r.Planet).getWorldPosition(new c.Vector3),m=n?r.getStarRadius():r.getPlanetRadius();let s=2*m*Math.sin(x*Math.PI/180),d=2*m*Math.cos(x*Math.PI/180),t={x:0,z:0};if(!h){const w=90-(180-Math.abs(x));t.x=r.getPlanetRadius()*Math.sin(w*Math.PI/180),t.z=r.getPlanetRadius()*Math.cos(w*Math.PI/180)}var e={x:a.Camera.position.x,y:a.Camera.position.y,z:a.Camera.position.z},i={x:a.Controls.target.x,y:a.Controls.target.y,z:a.Controls.target.z},z={x:o.x+s-t.x,y:o.y,z:o.z+d+t.z},S={x:o.x-t.x,y:o.y,z:o.z+t.z};f=new R.Tween([e,i]),f.to([z,S],500),f.onUpdate(()=>{a.Camera.position.set(e.x,e.y,e.z),a.Camera.lookAt(i.x,i.y,i.z)}),f.onComplete(()=>{a.Controls.enabled=h;var w=new c.Vector3(i.x,i.y,i.z);a.Controls.target.copy(w),y=w.clone()}),f.start()}function k(n){g.x=n.clientX/window.innerWidth,g.y=n.clientY/window.innerHeight}class G{constructor(o,m){this.Camera=o,this.Controls=m}}class T{constructor(){this.sceneGroupXPosition=0,this.sceneGroupXPositionIncrementor=1e4}positionGroup(o){o.position.set(this.sceneGroupXPosition++*this.sceneGroupXPositionIncrementor,0,0)}}class L{}
