import*as r from"./_snowpack/pkg/three.js";import*as C from"./_snowpack/pkg/three/addons.js";import{SolarSystem as O}from"./solarSystem.js";import{ExoplanetSystem as z}from"./exoplanetSystem.js";import{SceneCamera as M}from"./sceneCamera.js";import*as x from"./observatories.js";const w=-160;let S=!1,f,y,p,a,g,h={x:.5,y:.5},c,u,m;export async function initScene(t,o=null,i=!1){if(S)return!1;globalThis.isDebug=i,S=!0,f=document.querySelector(t),y=document.querySelector("#earth-observatories-labels");const s=new r.WebGLRenderer({antialias:!0,canvas:f,alpha:!0});s.setPixelRatio(window.devicePixelRatio);{p=new r.Scene;const e=await new r.TextureLoader().loadAsync("images/image_background_stars.jpg");e.mapping=r.EquirectangularReflectionMapping,e.colorSpace=r.SRGBColorSpace,p.background=e}{const e=new r.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,2e3);p.add(e);const n=new C.OrbitControls(e,f);n.target.set(0,0,0),n.dampingFactor=.2,n.enableDamping=!0,a=new M(e,n)}{const e=new r.AmbientLight("#ffffff",.1);p.add(e)}const l=new G;return u=new O,await u.initAsync(),l.positionGroup(u),p.add(u),m=new z,await m.initAsync(),l.positionGroup(m),p.add(m),o!=null?await showHomeStateAsync(o):await showObservatoriesStateAsync(!0),x.initObservatoriesData(y,u),window.addEventListener("mousemove",E,!1),R(s),!0}export async function showHomeStateAsync(t,o=!0){await A(t),a.resetControlsDistance(),a.IsDirectOnPlanet=!1,setIsFocusActivePlanetOnScene(!1,o),b(d.Home)}export async function showObservatoriesStateAsync(t,o=!0){I();const i=c.getPlanetRadius();if(a.Controls.minDistance=i*1.5,a.Controls.maxDistance=i*2,t)a.IsDirectOnPlanet=!0,setIsFocusActivePlanetOnScene(!0,o);else{a.IsFocusOnScene=!1;const n=c.Planet.getWorldPosition(new r.Vector3);var s=new r.Vector3(n.x-i*2,n.y,n.z),l=(n.x-s.x)*Math.tan(45*Math.PI/180),e=new r.Vector3(n.x,n.y+l,n.z);a.changeCameraSettings(s,e,o)}b(t?d.ObservatoryEarth:d.ObservatorySpace)}export function setIsFocusActivePlanetOnScene(t,o=!0){a.IsFocusOnScene=t;const i=F(a.IsDirectOnPlanet);a.changeCameraSettings(i.position,i.lookAt,o)}async function A(t){u.hide(),m.show(),await m.prepareAsync(t),c=m}function I(){m.hide(),u.show(),c=u}function b(t){g=t,y.style.display=g!=d.ObservatoryEarth?"none":""}function R(t){requestAnimationFrame(o);function o(s){const l=s*.001;if(i()){const e=t.domElement;a.Camera.aspect=e.clientWidth/e.clientHeight,a.Camera.updateProjectionMatrix()}if(g!=d.ObservatoryEarth&&u.animate(s),m.animate(s),!a.CameraAnimator?.update(s)){if(!a.IsFocusOnScene){const e=a.Controls.target,n=new r.Vector3(e.x+(Math.abs(e.z-a.Camera.position.z)<1e7?0:(.5-h.x)/100),e.y+(.5-h.y)/100,e.z+(h.x-.5)/100);Math.abs(a.FocusedCameraTarget.x-n.x)<=c.getPlanetRadius()/10&&(e.x=n.x),Math.abs(a.FocusedCameraTarget.y-n.y)<=c.getPlanetRadius()/10&&(e.y=n.y),Math.abs(a.FocusedCameraTarget.z-n.z)<=c.getPlanetRadius()/10&&(e.z=n.z),a.Controls.target.copy(e)}a.Controls.update()}g==d.ObservatoryEarth&&x.updateObservatoriesLabels(f,a.Camera,u),t.render(p,a.Camera),requestAnimationFrame(o)}function i(){const s=t.domElement,l=s.clientWidth,e=s.clientHeight,n=s.width!==l||s.height!==e;return n&&t.setSize(l,e,!1),n}}function F(t){const o=c.Planet.getWorldPosition(new r.Vector3),i=c.getPlanetRadius();let s=2*i*(t?-1:Math.sin(w*Math.PI/180)),l=t?0:2*i*Math.cos(w*Math.PI/180),e={x:0,z:0};if(!t&&!a.IsFocusOnScene){const v=90-(180-Math.abs(w));e.x=c.getPlanetRadius()*Math.sin(v*Math.PI/180),e.z=c.getPlanetRadius()*Math.cos(v*Math.PI/180)}var n=new r.Vector3(o.x+s-e.x,o.y,o.z+l+e.z),P=new r.Vector3(o.x-e.x,o.y,o.z+e.z);return{position:n,lookAt:P}}function E(t){h.x=t.clientX/window.innerWidth,h.y=t.clientY/window.innerHeight}class G{constructor(){this.sceneGroupXPosition=0,this.sceneGroupXPositionIncrementor=1e4}positionGroup(o){o.position.set(this.sceneGroupXPosition++*this.sceneGroupXPositionIncrementor,0,0)}}var d;(function(t){t[t.Home=0]="Home",t[t.ObservatoryEarth=1]="ObservatoryEarth",t[t.ObservatorySpace=2]="ObservatorySpace"})(d||(d={}));
