import*as e from"./_snowpack/pkg/three.js";import{BaseSystem as h,SolarSystem as l}from"./solarSystem.js";import*as c from"./helpers.js";export class ExoplanetSystem extends h{constructor(){super()}getStarRadius(){return this.Star.scale.x}getPlanetRadius(){return this.Planet.scale.x}async initAsync(){const t=1,s=1;{const a=new e.SphereGeometry(t,32,32),i=await new e.TextureLoader().loadAsync("images/image_texture_sun.jpg");i.colorSpace=e.SRGBColorSpace,i.anisotropy=4;const n=new e.MeshPhongMaterial({emissiveMap:i,emissive:"#ffffff"});let r=new e.Mesh(a,n);this.add(r),this.Star=r,this.light=new e.PointLight("#ffffff",1,0,.8),this.add(this.light),globalThis.isDebug&&c.addAxesHelper(r,t)}{const a=new e.SphereGeometry(s,32,32),i=await new e.TextureLoader().loadAsync("images/image_texture_earth_daymap.jpg");i.colorSpace=e.SRGBColorSpace;const n=new e.MeshPhongMaterial({map:i});let r=new e.Mesh(a,n);this.add(r),this.Planet=r,globalThis.isDebug&&c.addAxesHelper(r,s)}}animate(t){t*=.001,this.Planet.setRotationFromAxisAngle(new e.Vector3(0,1,0),t*.1),this.Star.setRotationFromAxisAngle(new e.Vector3(0,1,0),t*.01)}async prepareAsync(t){{const s=t.star.sunRadius*l.getSunRadius();this.Star.scale.set(s,s,s);const a=await new e.TextureLoader().loadAsync(t.star.texture);a.colorSpace=e.SRGBColorSpace,this.Star.material.emissiveMap=a}{const s=t.planet.earthRadius*l.getEarthRadius();this.Planet.scale.set(s,s,s);const a=await new e.TextureLoader().loadAsync(t.planet.texture);a.colorSpace=e.SRGBColorSpace,this.Planet.material.map=a;const i=t.star.sunRadius/t.planet.orbitalRadius,n=i>1&&i<=4?t.planet.orbitalRadius*l.getEarthOrbitalRadius()+this.getStarRadius()+this.getPlanetRadius():(this.getStarRadius()+this.getPlanetRadius())*2;this.Planet.position.set(n,0,0),this.light.intensity=n}}show(){this.light.decay=.8}hide(){this.light.decay=100}}export class ExoplanetSystemData{}class u{}class d{}
