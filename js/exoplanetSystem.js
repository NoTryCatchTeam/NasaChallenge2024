import*as e from"./_snowpack/pkg/three.js";export class ExoplanetSystem extends e.Group{constructor(){super()}async initAsync(){const t=1,o=1;{const a=new e.SphereGeometry(t,32,32),s=await new e.TextureLoader().loadAsync("images/image_texture_sun.jpg");s.colorSpace=e.SRGBColorSpace;const i=new e.MeshPhongMaterial({emissiveMap:s,emissive:"#ffffff"});let r=new e.Mesh(a,i);this.add(r),this.Star=r;const n=new e.AxesHelper(t);n.material.depthTest=!1,n.renderOrder=1,r.add(n),this.light=new e.PointLight("#ffffff",1e3),this.add(this.light)}{const a=new e.SphereGeometry(o,32,32),s=await new e.TextureLoader().loadAsync("images/image_texture_earth_daymap.jpg");s.colorSpace=e.SRGBColorSpace;const i=new e.MeshPhongMaterial({map:s});let r=new e.Mesh(a,i);this.add(r),this.Planet=r;const n=new e.AxesHelper(o);n.material.depthTest=!1,n.renderOrder=1,r.add(n)}}animate(t){t*=.001,this.Planet.setRotationFromAxisAngle(new e.Vector3(0,1,0),t*.1),this.Star.setRotationFromAxisAngle(new e.Vector3(0,1,0),t*.01)}async prepare(t){{const o=this.Star.scale,a=t.Star.SunRadius/o.x;this.Star.scale.set(a,a,a);const s=await new e.TextureLoader().loadAsync(t.Star.Texture);s.colorSpace=e.SRGBColorSpace,this.Star.material.emissiveMap=s}{const o=this.Planet.scale,a=t.Planet.EarthRadius/o.x;this.Planet.scale.set(a,a,a);const s=await new e.TextureLoader().loadAsync(t.Planet.Texture);s.colorSpace=e.SRGBColorSpace,this.Planet.material.map=s,this.Planet.position.set(t.Planet.OrbitalRadius,0,0)}}}export class ExoplanetData{}class l{}class h{}
