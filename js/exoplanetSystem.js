import*as e from"./_snowpack/pkg/three.js";import{SolarSystem as c}from"./solarSystem.js";export class ExoplanetSystem extends e.Group{constructor(){super()}async initAsync(){const t=1,a=1;{const s=new e.SphereGeometry(t,32,32),r=await new e.TextureLoader().loadAsync("images/image_texture_sun.jpg");r.colorSpace=e.SRGBColorSpace;const o=new e.MeshPhongMaterial({emissiveMap:r,emissive:"#ffffff"});let i=new e.Mesh(s,o);this.add(i),this.Star=i;const n=new e.AxesHelper(t);n.material.depthTest=!1,n.renderOrder=1,i.add(n),this.light=new e.PointLight("#ffffff",1,0,.8),this.add(this.light)}{const s=new e.SphereGeometry(a,32,32),r=await new e.TextureLoader().loadAsync("images/image_texture_earth_daymap.jpg");r.colorSpace=e.SRGBColorSpace;const o=new e.MeshPhongMaterial({map:r});let i=new e.Mesh(s,o);this.add(i),this.Planet=i;const n=new e.AxesHelper(a);n.material.depthTest=!1,n.renderOrder=1,i.add(n)}}animate(t){t*=.001,this.Planet.setRotationFromAxisAngle(new e.Vector3(0,1,0),t*.1),this.Star.setRotationFromAxisAngle(new e.Vector3(0,1,0),t*.01)}async prepareAsync(t){{const a=t.star.sunRadius*c.getSunRadius();this.Star.scale.set(a,a,a),this.StarRadius=this.Star.scale.x;const s=await new e.TextureLoader().loadAsync(t.star.texture);s.colorSpace=e.SRGBColorSpace,this.Star.material.emissiveMap=s}{const a=t.planet.earthRadius*c.getEarthRadius();this.Planet.scale.set(a,a,a),this.PlanetRadius=this.Planet.scale.x;const s=await new e.TextureLoader().loadAsync(t.planet.texture);s.colorSpace=e.SRGBColorSpace,this.Planet.material.map=s;const r=t.star.sunRadius/t.planet.orbitalRadius,o=r>1&&r<=4?t.planet.orbitalRadius*c.getEarthOrbitalRadius()+this.StarRadius+this.PlanetRadius:(this.StarRadius+this.PlanetRadius)*2;this.Planet.position.set(o,0,0),this.light.intensity=o}}}export class ExoplanetSystemData{}class p{}class d{}
