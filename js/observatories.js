import*as t from"./_snowpack/pkg/three.js";let b=!1,u=[];export function renderObservatories(i,a,c){if(b)return;b=!0,u=i;const o=Math.PI*1.5,l=Math.PI,r=new t.Object3D;c.Planet.add(r);const d=new t.Object3D;r.add(d);const n=new t.Object3D;n.position.z=c.getPlanetRadius(),d.add(n);for(const e of u){r.rotation.y=t.MathUtils.degToRad(e.longitude)+o,d.rotation.x=t.MathUtils.degToRad(e.latitude)+l,n.updateWorldMatrix(!0,!1),e.position=n.getWorldPosition(new t.Vector3);const s=document.createElement("div");s.addEventListener("click",function(g){globalThis.dotNet.invokeMethodAsync("OnEarthLabelClicked",e.id)},!1);const p=document.createElement("img");p.src="images/ic_observatory_pin.svg",s.appendChild(p);const m=document.createElement("p");m.textContent=e.name,s.appendChild(m),a.appendChild(s),e.element=s}}export function updateObservatoriesLabels(i,a,c){const o=new t.Vector3,l=c.Planet.getWorldPosition(new t.Vector3);for(const r of u){const{name:d,position:n,element:e}=r,s=new t.Vector3().subVectors(l,a.position).normalize(),p=new t.Vector3().subVectors(n,l).normalize();if(s.dot(p)>-.5){e.style.display="none";continue}e.style.display="",o.copy(n),o.project(a);const g=(o.x*.5+.5)*i.clientWidth,f=(o.y*-.5+.5)*i.clientHeight;e.style.transform=`translate(-50%, -50%) translate(${g}px,${f}px)`,e.style.zIndex=((-o.z*.5+.5)*1e5|0).toString()}}export class Observatory{}
